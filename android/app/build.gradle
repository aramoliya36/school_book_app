def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 30
    buildToolsVersion "17.0.0"


    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
//    lintOptions {
//        disable 'InvalidPackage'
//    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.skoolmonk"
        minSdkVersion 23
        targetSdkVersion 30
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug

//            minifyEnabled false
//            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
//        exclude '*/res/**'
//        exclude 'AndroidManifest.xml:19:9-41'
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    implementation (name: 'peb-lib', ext: 'aar')
//    implementation 'com.google.android.material:material:1.3.0'
//    implementation 'com.squareup.okhttp:okhttp:2.4.0'
//    implementation 'androidx.multidex:multidex:2.0.0'
//    implementation 'com.squareup.okhttp:okhttp-urlconnection:2.2.0'
//    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
//    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
//    implementation 'com.google.android.gms:play-services-auth:17.0.0'
//    implementation 'com.google.android.gms:play-services-auth-api-phone:17.1.0'


    implementation (name: 'peb-lib', ext: 'aar')

    implementation 'com.squareup.okhttp:okhttp:2.4.0'
    implementation 'com.android.support:multidex:1.0.1'
    implementation 'com.squareup.okhttp:okhttp-urlconnection:2.2.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.google.android.gms:play-services-tasks:15.0.1'

    implementation 'com.android.support:appcompat-v7:30.0.0'
    implementation 'com.android.support:design:30.0.0'
    implementation 'com.android.support:cardview-v7:30.0.0'
    implementation 'com.android.support:recyclerview-v7:30.0.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    implementation files('libs/gpay.aar')

   // implementation platform('com.google.firebase:firebase-bom:26.0.0')

    implementation platform('com.google.firebase:firebase-bom:29.0.4')
    implementation 'com.google.firebase:firebase-analytics'

}
